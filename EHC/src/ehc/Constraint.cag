%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell importable interface to Constraint/AbsSyn
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(99 constraint) hs module {%{EH}Constraint} import({%{EH}Base.Common})
%%]

%%[(99 constraint) hs import(Language.Haskell.Constraint.Syntax)
%%]

%%[(99 constraint) ag import({Constraint/AbsSyn})
%%]

%%[(99 constraint) hs export(TyVar(..), TyVars, WildcardTyVar(..), TyExpr(..), TyExprs, OptTyExpr, Top(..), Decl(..), Decls, Binding(..), Bindings, PatExpr(..), PatExprs, Signature(..), Signatures, DataCon(..), DataCons, DataField(..), DataFields, EqualityConstraint(..), EqualityConstraints, InstanceConstraint(..), InstanceConstraints, FuncDep(..), FuncDeps, Expr(..), CaseAlt(..), CaseAlts, Pattern(..))
%%]
